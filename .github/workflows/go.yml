name: Go

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, macOS-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
    - name: Check out code
      uses: actions/checkout@v2

    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.20.x

    - name: Install Dependencies (Linux)
      if: runner.os == 'Linux'
      run: |
        sudo apt-get update
        sudo apt-get install -y libasound2-dev libx11-dev libxrandr-dev libxcursor-dev libxinerama-dev libxi-dev

    - name: Install Dependencies (macOS)
      if: runner.os == 'macOS'
      run: |
        brew install pkg-config
        brew install glfw
        brew install glew

    - name: Cache modules
      uses: actions/cache@v2
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Download modules
      run: go mod download

    - name: Test
      run: go test -v ./...

    - name: Build (Windows)
      if: runner.os == 'Windows'
      run: go build -v -o output/MyGame-windows.exe .

    - name: Build (Linux)
      if: runner.os == 'Linux'
      run: GOOS=linux GOARCH=amd64 CGO_ENABLED=1 go build -v -o output/MyGame-linux .

    - name: Build (macOS)
      if: runner.os == 'macOS'
      run: GOOS=darwin GOARCH=amd64 CGO_ENABLED=1 go build -v -o output/MyGame-macos .

    - name: Upload Artifacts
      uses: actions/upload-artifact@v2
      with:
        name: Game-${{ runner.os }}
        path: output/*
