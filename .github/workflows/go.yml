name: Go

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest, macOS-latest]
    steps:
    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.20'

    - name: Install Linux dependencies
      if: runner.os == 'Linux'
      run: sudo apt-get update && sudo apt-get install -y libasound2-dev libx11-dev libxrandr-dev libxcursor-dev libxinerama-dev libxi-dev

    - name: Include Assets
      run: |
        mkdir -p ./output
        cp -r ./assets ./output/assets

    - name: Install Go modules
      run: go mod download

    - name: Build for Windows
      if: runner.os == 'Windows'
      run: go build -v -o ./output/GoFlappy-windows.exe .

    - name: Build for MacOS
      if: runner.os == 'macOS'
      run: |
        GOOS=darwin go build -v -o ./output/GoFlappy-macos .

    - name: Build for Linux
      if: runner.os == 'Linux'
      run: |
        GOOS=linux go build -v -o ./output/GoFlappy-linux .

    - name: Test
      run: go test -v ./...

    - name: Upload artifact (Windows)
      if: runner.os == 'Windows'
      uses: actions/upload-artifact@v2
      with:
        name: GoFlappy(Windows)
        path: ./output/GoFlappy-windows.exe

    - name: Upload artifact (MacOS)
      if: runner.os == 'macOS'
      uses: actions/upload-artifact@v2
      with:
        name: GoFlappy(MacOS)
        path: ./output/GoFlappy-macos

    - name: Upload artifact (Linux)
      if: runner.os == 'Linux'
      uses: actions/upload-artifact@v2
      with:
        name: GoFlappy(Linux)
        path: ./output/GoFlappy-linux
